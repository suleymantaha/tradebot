# Multi-stage build for production
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Ensure esbuild installs correct musl binary on Alpine
ENV npm_config_platform=linux \
    npm_config_arch=x64 \
    npm_config_libc=musl

# Copy package files
COPY package*.json ./

# Install all dependencies (including devDependencies for build)
# Align esbuild host and binary versions to avoid mismatch errors
RUN npm ci && npm i -D esbuild@0.25.4 && npm rebuild esbuild --force

# Copy source code
COPY . .

# Build arguments
ARG VITE_API_URL
ENV VITE_API_URL=$VITE_API_URL

# Build the application (explicit CLI path to avoid ESM resolution issues)
RUN node ./node_modules/vite/bin/vite.js build

# Production stage with Nginx
FROM nginx:alpine

# Copy built assets from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80
EXPOSE 80

# Health check (use wget to avoid installing curl)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget -qO- http://localhost/ > /dev/null 2>&1 || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
