server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # Allow TradingView script and WebSocket connections for markets page
    add_header Content-Security-Policy "default-src 'self' https: http: data: blob:; script-src 'self' https://s3.tradingview.com https://s.tradingview.com https://*.tradingview.com 'unsafe-inline' 'unsafe-eval'; connect-src 'self' https: http: ws: wss: wss://stream.binance.com:9443 wss://stream.binance.com wss://ws-feed.exchange.coinbase.com https://*.tradingview.com wss://*.tradingview.com; img-src 'self' data: https: blob:; style-src 'self' 'unsafe-inline' https:; frame-src https://s.tradingview.com https://www.tradingview.com https://*.tradingview.com; child-src https://s.tradingview.com https://www.tradingview.com https://*.tradingview.com; font-src 'self' https: data:; media-src 'self' https: data: blob:; worker-src 'self' blob:;" always;

    # Handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Disable caching for index.html to avoid stale CSP/HTML on first load
    location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # API proxy dev ortamında kullanılmıyor; frontend ENV ile backend'e gider
    # location /api/ {
    #     proxy_pass http://backend:8000;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
